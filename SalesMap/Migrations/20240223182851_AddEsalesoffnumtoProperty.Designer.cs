// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesMap.Context;

#nullable disable

namespace SalesMap.Migrations
{
    [DbContext(typeof(SlaesOfficedbContext))]
    [Migration("20240223182851_AddEsalesoffnumtoProperty")]
    partial class AddEsalesoffnumtoProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SalesMap.Entites.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salesOfficeNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SalesMap.Entites.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("SalesMap.Entites.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salesOfficeNumber")
                        .HasColumnType("int");

                    b.Property<int>("salesOfficeNumbers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("salesOfficeNumbers");

                    b.ToTable("properties");
                });

            modelBuilder.Entity("SalesMap.Entites.Sales_Office", b =>
                {
                    b.Property<int>("Numbers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Numbers"), 1L, 1);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Numbers");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("sales_Offices");
                });

            modelBuilder.Entity("SalesMap.Entites.Property", b =>
                {
                    b.HasOne("SalesMap.Entites.Sales_Office", "salesOffice")
                        .WithMany()
                        .HasForeignKey("salesOfficeNumbers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("salesOffice");
                });

            modelBuilder.Entity("SalesMap.Entites.Sales_Office", b =>
                {
                    b.HasOne("SalesMap.Entites.Employee", "Emp")
                        .WithOne("salesOffice")
                        .HasForeignKey("SalesMap.Entites.Sales_Office", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("SalesMap.Entites.Employee", b =>
                {
                    b.Navigation("salesOffice")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
